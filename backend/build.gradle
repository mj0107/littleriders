plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'kr.co.littleriders'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}
dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    /* JPA */
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    /* mongo */
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    /* redis */
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    /* mail */
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    /* validate */
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    /* lombok */
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    /* h2 */
    runtimeOnly 'com.h2database:h2'

    /* mysql */
    runtimeOnly 'com.mysql:mysql-connector-j'


    /* JWT */
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'


    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'


    /* Bcrypt */
    implementation 'org.mindrot:jbcrypt:0.4'

    /* Querydsl */
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    /* Swagger */
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
}




    //testImplementation 'org.springframework.security:spring-security-test'
    //implementation 'org.springframework.boot:spring-boot-starter-security'


tasks.named('test') {
    useJUnitPlatform()
}

def querydslDir = "src/generated"

sourceSets {
    main.java.srcDirs += [ querydslDir ]
}
tasks.withType(JavaCompile) {

    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))

}

clean.doLast {
    file(querydslDir).deleteDir()
}